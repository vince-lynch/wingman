{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.min.js","public/js/angular.app.js","public/js/config/facebookOauth.js","public/js/config/routes.js","public/js/controllers/ConsoleController.js","public/js/directives/fileupload.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _ConsoleController = require('./controllers/ConsoleController');\n\nvar _ConsoleController2 = _interopRequireDefault(_ConsoleController);\n\nvar _fileupload = require('./directives/fileupload');\n\nvar _fileupload2 = _interopRequireDefault(_fileupload);\n\nvar _routes = require('./config/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nvar _facebookOauth = require('./config/facebookOauth');\n\nvar _facebookOauth2 = _interopRequireDefault(_facebookOauth);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconsole.log(\"window.modules\", window.modules);\n\n//import oAuthKeys from './services/oAuthKeys';\n//import ProductService from './services/ProductService';\n\nvar app = angular.module('wingmanApp', ['ngResource', 'satellizer', 'angular-jwt', 'ui.router', 'angularMoment', 'ngFileUpload']).constant('API', '/manager/api').constant('FACEBOOK_API_KEY', '1204326232924507').controller('consoleController', _ConsoleController2.default).directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}]).config(function ($stateProvider, $urlRouterProvider) {\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: 'views/login.html'\n    }).state('login', {\n        url: '/login',\n        templateUrl: 'views/login.html'\n    }).state('profile', {\n        url: '/profile',\n        templateUrl: 'views/profile.html'\n    }).state('about', {\n        url: '/about',\n        templateUrl: 'views/about.html'\n    }).state('dashboard', {\n        url: '/dashboard',\n        templateUrl: 'views/dashboard.html'\n    }).state('users', {\n        url: '/users',\n        templateUrl: 'views/users.html'\n    });\n}).config(function ($authProvider, $urlRouterProvider, FACEBOOK_API_KEY) {\n    $authProvider.facebook({\n        url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n        clientId: FACEBOOK_API_KEY\n    });\n\n    $urlRouterProvider.otherwise('login');\n\n    $authProvider.loginUrl = 'api/auth/login';\n    $authProvider.signupUrl = 'api/auth/register';\n\n    //.httpInterceptor = function(config) {\n    //   return !!config.url.match(API_URL2);\n    //};\n\n    //$authProvider.tokenPrefix = null;\n});\n\n// var app = angular.module('wingmanApp', )\n//   .constant('API', '/manager/api') \n//   //.config(InterceptorConfig)\n//   .constant('FACEBOOK_API_KEY','1204326232924507')\n//   .controller('consoleController', ConsoleController)\n//   .directive('fileModel', ['$parse', function ($parse) {\n//     return {\n//         restrict: 'A',\n//         link: function(scope, element, attrs) {\n//             var model = $parse(attrs.fileModel);\n//             var modelSetter = model.assign;\n\n//             element.bind('change', function(){\n//                 scope.$apply(function(){\n//                     modelSetter(scope, element[0].files[0]);\n//                 });\n//             });\n//         }\n//     };\n//     }])\n//   .config(function ($stateProvider, $urlRouterProvider) {\n//         $stateProvider\n//              .state('home', {\n//                 url: '/',\n//                 templateUrl: 'views/login.html'\n//             })\n//              .state('login', {\n//                 url: '/login',\n//                 templateUrl: 'views/login.html'\n//             })\n//              .state('profile', {\n//                 url: '/profile',\n//                 templateUrl: 'views/profile.html'\n//             })\n//              .state('about', {\n//                 url: '/about',\n//                 templateUrl: 'views/about.html'\n//             })\n//              .state('dashboard', {\n//                 url: '/dashboard',\n//                 templateUrl: 'views/dashboard.html'\n//             });\n//   }).config(function ($authProvider,$urlRouterProvider, FACEBOOK_API_KEY){\n//       $authProvider\n//         .facebook({\n//           url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n//           clientId: FACEBOOK_API_KEY\n//         });\n\n//         $urlRouterProvider.otherwise('login');\n\n//         $authProvider.loginUrl  = 'api/auth/login';\n//         $authProvider.signupUrl = 'api/auth/register';\n\n//         //.httpInterceptor = function(config) {\n//        //   return !!config.url.match(API_URL2);\n//       //};\n\n//     //$authProvider.tokenPrefix = null;\n\n// });\n\n\n/*InterceptorConfig.$inject = ['$httpProvider'];\nfunction InterceptorConfig($httpProvider){\n  $httpProvider.interceptors.push('AuthInterceptor');\n}  ;*/\n\n/*Router.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('home', {\n    url: '/', \n    templateUrl: 'views/console.html'\n  })\n  .state('about', {\n    url: '/about', \n    templateUrl: 'views/about.html'\n  });\n  $urlRouterProvider.otherwise('/');\n}*/\n\n},{\"./config/facebookOauth\":2,\"./config/routes\":3,\"./controllers/ConsoleController\":4,\"./directives/fileupload\":5}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function ($authProvider, $urlRouterProvider, FACEBOOK_API_KEY) {\n  $authProvider.facebook({\n    url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n    clientId: FACEBOOK_API_KEY\n  });\n\n  $urlRouterProvider.otherwise('login');\n\n  $authProvider.loginUrl = 'api/auth/login';\n  $authProvider.signupUrl = 'api/auth/register';\n};\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n   value: true\n});\n\nexports.default = function ($stateProvider, $urlRouterProvider) {\n   $stateProvider.state('home', {\n      url: '/',\n      templateUrl: 'views/login.html'\n   }).state('login', {\n      url: '/login',\n      templateUrl: 'views/login.html'\n   }).state('profile', {\n      url: '/profile',\n      templateUrl: 'views/profile.html'\n   }).state('about', {\n      url: '/about',\n      templateUrl: 'views/about.html'\n   }).state('dashboard', {\n      url: '/dashboard',\n      templateUrl: 'views/dashboard.html'\n   });\n};\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction ConsoleController($scope, $http, $resource, $auth, $state, $window, Upload) {\n  console.log('Main controller Angular');\n\n  $scope.pointingtous = false;\n  $scope.authenticated = false;\n  $scope.nolocation = true;\n  $scope.messages = [{ username: \"app\", message: \"Loading..\", timestamp: Date.now() }];\n  $window.messages = [];\n  $scope.inCity = \"\";\n  $scope.texttosend = \"\";\n  $scope.userList = [];\n\n  $scope.login = { email: \"\", password: \"\", username: \"\" };\n\n  var socket = window.io();\n\n  $scope.usersPageInit = function () {\n\n    $http({\n      method: 'POST',\n      url: '/api/users',\n      data: { city: $scope.inCity }\n    }).then(function (response) {\n      console.log(response);\n\n      $scope.userList = response.data;\n    });\n  };\n\n  console.log(\"controller loaded\");\n\n  $scope.submit = function (file) {\n    //function to call on form submit\n    console.log(\"submit function called, file: \", file);\n    if (file) {\n      //check if from is valid\n      $scope.upload(file); //call upload function\n    }\n  };\n  $scope.upload = function (file) {\n    Upload.upload({\n      url: '/api/upload', //webAPI exposed to upload the file\n      data: { file: file, login: $scope.login } //pass file as data, should be user ng-model\n    }).then(function (resp) {\n      //upload function returns a promise\n      if (resp.data.error_code === 0) {\n        //validate success\n        $window.alert('Success ' + resp.config.data.file.name + 'uploaded. Response: ');\n        $window.resp = resp;\n      } else {\n        $window.alert('an error occured');\n      }\n    }, function (resp) {\n      //catch error\n      console.log('Error status: ' + resp.status);\n      $window.alert('Error status: ' + resp.status);\n      $window.resp = resp.res;\n    }, function (evt) {\n      console.log(evt);\n      var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n      console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n      $scope.progress = 'progress: ' + progressPercentage + '% '; // capture upload progress\n    });\n  };\n\n  /*  $scope.isAuth = function(){\n       $scope.authenticated ? '' : $state.go('login');\n    }*/\n\n  $window.state = $state;\n\n  $scope.isAuth = function () {\n    $scope.isAuthenticated = $auth.isAuthenticated();\n\n    if ($scope.isAuthenticated) {\n      $scope.payload = $auth.getPayload();\n\n      if ($state.current.name == \"login\") {\n        $state.go('dashboard');\n      }\n\n      console.log(\"payload\", $scope.payload);\n\n      $scope.login.profilepicture = $scope.payload._doc.image;\n      $scope.login.usertype = $scope.payload._doc.type;\n      $scope.login.username = $scope.payload._doc.username;\n      $scope.login.lastLatLng = $scope.payload._doc.lastLatLng;\n    } else {\n      $state.go('login'); // go back to login page\n    }\n  };\n\n  $scope.logout = function () {\n    $auth.logout();\n  };\n\n  // sign in with facebook\n  $scope.authenticate = function (provider) {\n    $auth.authenticate(provider);\n  };\n\n  $scope.helloworld = \"hello world from $scope now its not even doing it\";\n\n  $scope.submitLogin = function () {\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.login($scope.login).then(function (response) {\n      console.log(response);\n      $scope.login.profilepicture = response.data.user.image;\n      console.log(\"$scope.login\", $scope.login);\n\n      $state.go('dashboard');\n      $scope.sendSocket($scope.login.username);\n    }).catch(function (err) {\n      $scope.authMessage = 'not authenticated, please either register, or recover your password?';\n    });\n  };\n\n  $scope.submitRegister = function () {\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.signup($scope.login).then(function (response) {\n      console.log(response);\n\n      $state.go('dashboard');\n      $scope.sendSocket($scope.login.username);\n    });\n  };\n\n  $scope.logout = function () {\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.logout();\n    $scope.authenticated = false;\n    $state.go('login');\n  };\n\n  /// GEO LOCATION STUFF\n\n  function getLocation() {\n    var msg;\n\n    if ('geolocation' in window.navigator) {\n\n      requestLocation();\n    } else {\n      // no geolocation :(\n      msg = \"Sorry, looks like your browser doesn't support geolocation\";\n      outputResult(msg); // output error message\n    }\n\n    function requestLocation() {\n      /**\n      getCurrentPosition() below accepts 3 arguments:\n      a success callback (required), an error callback  (optional), and a set of options (optional)\n      **/\n\n      var options = {\n        // enableHighAccuracy = should the device take extra time or power to return a really accurate result, or should it give you the quick (but less accurate) answer?\n        enableHighAccuracy: false,\n        // timeout = how long does the device have, in milliseconds to return a result?\n        timeout: 5000,\n        // maximumAge = maximum age for a possible previously-cached position. 0 = must return the current position, not a prior cached position\n        maximumAge: 0\n      };\n\n      // call getCurrentPosition()\n      window.navigator.geolocation.getCurrentPosition(success, error, options);\n\n      // upon success, do this\n      function success(pos) {\n        // get longitude and latitude from the position object passed in\n\n\n        var geocoords = { lat: \"51.4937728\", lng: \"-0.1422\" }; //{lng: pos.coords.longitude, lat: pos.coords.latitude}\n\n        // needs to calculate nearest city using GOOGLE. (in order to create rooms/ something like that with sockets)\n        //$http.post('', geocoords, config).then(successCallback, errorCallback);\n\n\n        // send back their location to the server (via sockets)\n        $scope.sendSocket($scope.login.username, geocoords);\n        // and presto, we have the device's location!\n        msg = 'You appear to be at longitude: ' + geocoords.lng + ' and latitude: ' + geocoords.lat + '<img src=\"http://maps.googleapis.com/maps/api/staticmap?zoom=15&size=300x300&maptype=roadmap&markers=color:red%7Clabel:A%7C' + geocoords.lat + ',' + geocoords.lng + '&sensor=false\">';\n        //outputResult(msg); // output message\n      }\n\n      // upon error, do this\n      function error(err) {\n        // return the error message\n        msg = 'Error: ' + err + ' :(';\n        //outputResult(msg); // output button\n        $('.pure-button').removeClass('pure-button-primary').addClass('pure-button-error'); // change button style\n      }\n    } // end requestLocation();\n\n  } // end getLocation()\n\n\n  // plot a map with markers of all recently logged in users\n  $scope.plotusers = function (lat, lng, data) {\n\n    console.log(\"lat/lng\", lng, lat);\n\n    var marker_these_users = [];\n\n    var i = 0;\n    for (i in data.lastLogs) {\n      if (data.lastLogs[i].username != $scope.login.username) {\n        marker_these_users.push(data.lastLogs[i]);\n      }\n    }\n    console.log(\"going to add these users to the map\", marker_these_users);\n    $window.marker_these_users = marker_these_users;\n\n    // map options\n    var options = {\n      zoom: 13,\n      center: new google.maps.LatLng(lat, lng), // centered US\n      mapTypeId: google.maps.MapTypeId.TERRAIN,\n      mapTypeControl: false\n    };\n\n    // init map\n    var map = new google.maps.Map(document.getElementById('map-result'), options);\n\n    // NY and CA sample Lat / Lng\n    var southWest = new google.maps.LatLng(40.744656, -74.005966);\n    var northEast = new google.maps.LatLng(34.052234, -118.243685);\n    var lngSpan = northEast.lng() - southWest.lng();\n    var latSpan = northEast.lat() - southWest.lat();\n\n    // set multiple marker\n    var i = 0;\n    for (i in marker_these_users) {\n      // init markers\n      var marker = new google.maps.Marker({\n        position: new google.maps.LatLng(marker_these_users[i].geocoords.lat, marker_these_users[i].geocoords.lng),\n        map: map,\n        title: 'Click Me '\n      });\n\n      // process multiple info windows\n      (function (marker, i) {\n        // add click event\n        google.maps.event.addListener(marker, 'click', function () {\n          $window.infowindow = new google.maps.InfoWindow({\n            content: 'Hello, World!!'\n          });\n          infowindow.open(map, marker);\n        });\n      })(marker, i);\n    }\n  };\n\n  $scope.getMyLocationbtn = function () {\n    console.log(\"clicked on getmylocation btn\");\n    // show spinner while getlocation() does its thing\n    $('.result').html('<i class=\"fa fa-spinner fa-spin\"></i>');\n    getLocation();\n  };\n\n  // Google Returns local businesses and stuff\n\n\n  // Sockets sends location of user\n  $scope.sendSocket = function (username, geocoords) {\n    socket.emit('newconnection', { message: \"a new user has connected\", username: username, geocoords: geocoords });\n  };\n\n  $scope.sendmessage = function (texttosend) {\n    var themessage = { text: texttosend, inCity: $scope.inCity, username: $scope.login.username, timestamp: Date.now() };\n    console.log(\"themessage\", themessage);\n    socket.emit('chatmessage', themessage);\n  };\n\n  // sockets returns the last seen location of other users\n\n  socket.on('message', function (message) {\n    console.log(\"socket - message: \", message);\n    $scope.$apply(function () {\n      $scope.messages.push(message);\n    });\n  });\n\n  $window.seeMessages = function () {\n    console.log($scope.messages);\n  };\n\n  socket.on('data', function (data) {\n    console.log(\"socket - data: \", data);\n    if (data.event == \"locationupdated\") {\n      $scope.inCity = data.inCity;\n\n      $scope.$apply(function () {\n        $scope.nolocation = !$scope.nolocation;\n        $scope.plotusers(data.urLatLng.lat, data.urLatLng.lng, data);\n      });\n      console.log(\"location has been updated\");\n    }\n  });\n\n  $scope.addtoarray = function () {\n    $scope.messages.push($scope.trythis);\n  };\n}\nexports.default = ConsoleController;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function ($parse) {\n\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n};\n\n},{}]},{},[1])\n\n","\nconsole.log(\"window.modules\", window.modules)\n\nimport ConsoleController from './controllers/ConsoleController';\nimport fileUpload        from './directives/fileupload';\n\nimport Routes            from './config/routes';\nimport facebookOauth     from './config/facebookOauth';\n//import oAuthKeys from './services/oAuthKeys';\n//import ProductService from './services/ProductService';\n\nvar app = angular.module('wingmanApp', ['ngResource', 'satellizer', 'angular-jwt', 'ui.router', 'angularMoment', 'ngFileUpload'])\n  .constant('API', '/manager/api') \n  .constant('FACEBOOK_API_KEY','1204326232924507')\n  .controller('consoleController', ConsoleController)\n    .directive('fileModel', ['$parse', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n\n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n    }])\n  .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n             .state('home', {\n                url: '/',\n                templateUrl: 'views/login.html'\n            })\n             .state('login', {\n                url: '/login',\n                templateUrl: 'views/login.html'\n            })\n             .state('profile', {\n                url: '/profile',\n                templateUrl: 'views/profile.html'\n            })\n             .state('about', {\n                url: '/about',\n                templateUrl: 'views/about.html'\n            })\n             .state('dashboard', {\n                url: '/dashboard',\n                templateUrl: 'views/dashboard.html'\n            })\n            .state('users', {\n                url: '/users',\n                templateUrl: 'views/users.html'\n            })\n  })\n  .config(function ($authProvider,$urlRouterProvider, FACEBOOK_API_KEY){\n      $authProvider\n        .facebook({\n          url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n          clientId: FACEBOOK_API_KEY\n        });\n\n        $urlRouterProvider.otherwise('login');\n\n        $authProvider.loginUrl  = 'api/auth/login';\n        $authProvider.signupUrl = 'api/auth/register';\n\n        //.httpInterceptor = function(config) {\n       //   return !!config.url.match(API_URL2);\n      //};\n\n    //$authProvider.tokenPrefix = null;\n\n});\n\n\n\n\n\n// var app = angular.module('wingmanApp', )\n//   .constant('API', '/manager/api') \n//   //.config(InterceptorConfig)\n//   .constant('FACEBOOK_API_KEY','1204326232924507')\n//   .controller('consoleController', ConsoleController)\n//   .directive('fileModel', ['$parse', function ($parse) {\n//     return {\n//         restrict: 'A',\n//         link: function(scope, element, attrs) {\n//             var model = $parse(attrs.fileModel);\n//             var modelSetter = model.assign;\n\n//             element.bind('change', function(){\n//                 scope.$apply(function(){\n//                     modelSetter(scope, element[0].files[0]);\n//                 });\n//             });\n//         }\n//     };\n//     }])\n//   .config(function ($stateProvider, $urlRouterProvider) {\n//         $stateProvider\n//              .state('home', {\n//                 url: '/',\n//                 templateUrl: 'views/login.html'\n//             })\n//              .state('login', {\n//                 url: '/login',\n//                 templateUrl: 'views/login.html'\n//             })\n//              .state('profile', {\n//                 url: '/profile',\n//                 templateUrl: 'views/profile.html'\n//             })\n//              .state('about', {\n//                 url: '/about',\n//                 templateUrl: 'views/about.html'\n//             })\n//              .state('dashboard', {\n//                 url: '/dashboard',\n//                 templateUrl: 'views/dashboard.html'\n//             });\n//   }).config(function ($authProvider,$urlRouterProvider, FACEBOOK_API_KEY){\n//       $authProvider\n//         .facebook({\n//           url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n//           clientId: FACEBOOK_API_KEY\n//         });\n\n//         $urlRouterProvider.otherwise('login');\n\n//         $authProvider.loginUrl  = 'api/auth/login';\n//         $authProvider.signupUrl = 'api/auth/register';\n\n//         //.httpInterceptor = function(config) {\n//        //   return !!config.url.match(API_URL2);\n//       //};\n\n//     //$authProvider.tokenPrefix = null;\n\n// });\n\n\n\n\n/*InterceptorConfig.$inject = ['$httpProvider'];\nfunction InterceptorConfig($httpProvider){\n  $httpProvider.interceptors.push('AuthInterceptor');\n}  ;*/\n\n/*Router.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('home', {\n    url: '/', \n    templateUrl: 'views/console.html'\n  })\n  .state('about', {\n    url: '/about', \n    templateUrl: 'views/about.html'\n  });\n  $urlRouterProvider.otherwise('/');\n}*/","export default function ($authProvider,$urlRouterProvider, FACEBOOK_API_KEY){\n      $authProvider\n        .facebook({\n          url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n          clientId: FACEBOOK_API_KEY\n        });\n\n        $urlRouterProvider.otherwise('login');\n\n        $authProvider.loginUrl  = 'api/auth/login';\n        $authProvider.signupUrl = 'api/auth/register';\n\n\n}","export default function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n             .state('home', {\n                url: '/',\n                templateUrl: 'views/login.html'\n            })\n             .state('login', {\n                url: '/login',\n                templateUrl: 'views/login.html'\n            })\n             .state('profile', {\n                url: '/profile',\n                templateUrl: 'views/profile.html'\n            })\n             .state('about', {\n                url: '/about',\n                templateUrl: 'views/about.html'\n            })\n             .state('dashboard', {\n                url: '/dashboard',\n                templateUrl: 'views/dashboard.html'\n            });\n  }","\n  function ConsoleController($scope,$http, $resource, $auth, $state, $window, Upload) {\n    console.log('Main controller Angular');\n\n    $scope.pointingtous  = false;\n    $scope.authenticated = false;\n    $scope.nolocation = true;\n    $scope.messages = [{username: \"app\", message: \"Loading..\", timestamp: Date.now() }];\n    $window.messages = [];\n    $scope.inCity = \"\";\n    $scope.texttosend = \"\";\n    $scope.userList = [];\n   \n\n    $scope.login = {email: \"\",password: \"\", username: \"\"}\n\n    var socket = window.io();\n\n    $scope.usersPageInit = function(){\n\n     $http({\n       method: 'POST',\n       url: '/api/users',\n       data: { city: $scope.inCity }\n      }).then(function(response){\n         console.log(response)\n\n         $scope.userList = response.data;\n\n\n      });\n\n    }\n\n\n    console.log(\"controller loaded\");\n\n    $scope.submit = function(file){ //function to call on form submit\n      console.log(\"submit function called, file: \", file)\n        if (file) { //check if from is valid\n            $scope.upload(file); //call upload function\n        }\n    }\n    $scope.upload = function (file) {\n        Upload.upload({\n            url: '/api/upload', //webAPI exposed to upload the file\n            data:{file:file, login: $scope.login} //pass file as data, should be user ng-model\n        }).then(function (resp) { //upload function returns a promise\n            if(resp.data.error_code === 0){ //validate success\n                $window.alert('Success ' + resp.config.data.file.name + 'uploaded. Response: ');\n                $window.resp = resp;\n            } else {\n                $window.alert('an error occured');\n            }\n        }, function (resp) { //catch error\n            console.log('Error status: ' + resp.status);\n            $window.alert('Error status: ' + resp.status);\n            $window.resp = resp.res\n        }, function (evt) { \n            console.log(evt);\n            var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n            console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n            $scope.progress = 'progress: ' + progressPercentage + '% '; // capture upload progress\n        });\n    };\n\n\n\n /*  $scope.isAuth = function(){\n      $scope.authenticated ? '' : $state.go('login');\n   }*/\n\n   $window.state = $state;\n\n   $scope.isAuth = function() {\n    $scope.isAuthenticated = $auth.isAuthenticated()\n\n    if($scope.isAuthenticated){\n      $scope.payload = $auth.getPayload();\n\n      if($state.current.name == \"login\"){\n        $state.go('dashboard')\n      }\n\n      console.log(\"payload\", $scope.payload)\n\n      $scope.login.profilepicture = $scope.payload._doc.image;\n      $scope.login.usertype       = $scope.payload._doc.type;\n      $scope.login.username       = $scope.payload._doc.username;\n      $scope.login.lastLatLng     = $scope.payload._doc.lastLatLng\n    } else {\n      $state.go('login') // go back to login page\n    }\n  };\n\n  $scope.logout = function(){\n    $auth.logout();\n  }\n\n    // sign in with facebook\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider);\n    };\n\n\n    $scope.helloworld = \"hello world from $scope now its not even doing it\";\n\n\n   $scope.submitLogin = function(){\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.login($scope.login).then(function(response){\n      console.log(response);\n      $scope.login.profilepicture = response.data.user.image\n      console.log(\"$scope.login\", $scope.login)\n \n      $state.go('dashboard')\n      $scope.sendSocket($scope.login.username);\n    }).catch(function(err){\n       $scope.authMessage = 'not authenticated, please either register, or recover your password?';\n     })\n   }\n\n  $scope.submitRegister = function(){\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.signup($scope.login).then(function(response){\n       console.log(response);\n  \n       $state.go('dashboard')\n       $scope.sendSocket($scope.login.username);\n    })\n  }\n\n  $scope.logout = function(){\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.logout()\n    $scope.authenticated = false;\n    $state.go('login')\n  }\n\n  /// GEO LOCATION STUFF\n\n  function getLocation(){\n  var msg; \n\n \n  if('geolocation' in window.navigator){\n\n    requestLocation();\n  }else{\n    // no geolocation :(\n    msg = \"Sorry, looks like your browser doesn't support geolocation\";\n    outputResult(msg); // output error message\n    \n  }\n\n  function requestLocation(){\n    /**\n    getCurrentPosition() below accepts 3 arguments:\n    a success callback (required), an error callback  (optional), and a set of options (optional)\n    **/\n  \n    var options = {\n      // enableHighAccuracy = should the device take extra time or power to return a really accurate result, or should it give you the quick (but less accurate) answer?\n      enableHighAccuracy: false,\n      // timeout = how long does the device have, in milliseconds to return a result?\n      timeout: 5000,\n      // maximumAge = maximum age for a possible previously-cached position. 0 = must return the current position, not a prior cached position\n      maximumAge: 0\n    };\n  \n    // call getCurrentPosition()\n     window.navigator.geolocation.getCurrentPosition(success, error, options); \n  \n    // upon success, do this\n    function success(pos){\n      // get longitude and latitude from the position object passed in\n\n\n      var geocoords = {lat:  \"51.4937728\", lng: \"-0.1422\" }//{lng: pos.coords.longitude, lat: pos.coords.latitude}\n\n      // needs to calculate nearest city using GOOGLE. (in order to create rooms/ something like that with sockets)\n      //$http.post('', geocoords, config).then(successCallback, errorCallback);\n\n\n      // send back their location to the server (via sockets)\n      $scope.sendSocket($scope.login.username, geocoords)\n      // and presto, we have the device's location!\n      msg = 'You appear to be at longitude: ' +  geocoords.lng + ' and latitude: ' +  geocoords.lat  + '<img src=\"http://maps.googleapis.com/maps/api/staticmap?zoom=15&size=300x300&maptype=roadmap&markers=color:red%7Clabel:A%7C' + geocoords.lat + ',' + geocoords.lng+ '&sensor=false\">';\n      //outputResult(msg); // output message\n    }\n  \n    // upon error, do this\n    function error(err){\n      // return the error message\n      msg = 'Error: ' + err + ' :(';\n      //outputResult(msg); // output button\n      $('.pure-button').removeClass('pure-button-primary').addClass('pure-button-error'); // change button style\n    }  \n  } // end requestLocation();\n\n\n} // end getLocation()\n\n\n\n  // plot a map with markers of all recently logged in users\n  $scope.plotusers = function(lat, lng, data){\n\n    console.log(\"lat/lng\", lng, lat)\n\n    var marker_these_users = [];\n    \n    var i = 0;\n    for (i in data.lastLogs){\n      if (data.lastLogs[i].username !=  $scope.login.username){\n         marker_these_users.push(data.lastLogs[i])\n      }\n    }\n    console.log(\"going to add these users to the map\", marker_these_users)\n    $window.marker_these_users = marker_these_users;\n\n\n     // map options\n    var options = {\n        zoom: 13,\n        center: new google.maps.LatLng(lat, lng), // centered US\n        mapTypeId: google.maps.MapTypeId.TERRAIN,\n        mapTypeControl: false\n    };\n\n    // init map\n    var map = new google.maps.Map(document.getElementById('map-result'), options);\n\n    // NY and CA sample Lat / Lng\n    var southWest = new google.maps.LatLng(40.744656, -74.005966);\n    var northEast = new google.maps.LatLng(34.052234, -118.243685);\n    var lngSpan = northEast.lng() - southWest.lng();\n    var latSpan = northEast.lat() - southWest.lat();\n\n    // set multiple marker\n    var i = 0;\n    for (i in marker_these_users) {\n        // init markers\n        var marker = new google.maps.Marker({\n            position: new google.maps.LatLng(marker_these_users[i].geocoords.lat, marker_these_users[i].geocoords.lng),\n            map: map,\n            title: 'Click Me '\n        });\n\n        // process multiple info windows\n        (function(marker, i) {\n            // add click event\n            google.maps.event.addListener(marker, 'click', function() {\n                $window.infowindow = new google.maps.InfoWindow({\n                    content: 'Hello, World!!'\n                });\n                infowindow.open(map, marker);\n            });\n        })(marker, i);\n    }\n\n  }\n   \n          \n\n\n\n\n\n$scope.getMyLocationbtn = function(){\n  console.log(\"clicked on getmylocation btn\")\n  // show spinner while getlocation() does its thing\n  $('.result').html('<i class=\"fa fa-spinner fa-spin\"></i>');\n  getLocation();\n};\n\n\n  // Google Returns local businesses and stuff\n\n\n  // Sockets sends location of user\n  $scope.sendSocket = function(username, geocoords){\n    socket.emit('newconnection',{message: \"a new user has connected\", username: username, geocoords: geocoords });\n  }\n  \n  $scope.sendmessage = function(texttosend){\n    var themessage = {text: texttosend, inCity: $scope.inCity, username: $scope.login.username, timestamp: Date.now()};\n    console.log(\"themessage\", themessage)\n    socket.emit('chatmessage', themessage )\n  }\n\n\n\n  // sockets returns the last seen location of other users\n  \n  socket.on('message', function(message){\n    console.log(\"socket - message: \", message)\n      $scope.$apply(function () {\n          $scope.messages.push(message)\n      });\n    \n  });\n\n  $window.seeMessages = function(){\n    console.log($scope.messages)\n  }\n\n  socket.on('data', function(data){\n    console.log(\"socket - data: \", data)\n    if (data.event == \"locationupdated\"){\n      $scope.inCity = data.inCity;\n\n      $scope.$apply(function () {\n            $scope.nolocation = !$scope.nolocation\n            $scope.plotusers(data.urLatLng.lat,data.urLatLng.lng, data)\n      });\n      console.log(\"location has been updated\")\n    }\n    \n  });\n\n  $scope.addtoarray = function(){\n    $scope.messages.push($scope.trythis)\n  }\n\n  \n\n\n    \n  }\nexport default ConsoleController;\n","export default function ($parse) {\n\t\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n\n            element.bind('change', function(){\n                scope.$apply(function(){\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n}"]}