{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app.min.js","public/js/angular.app.js","public/js/controllers/ConsoleController.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _ConsoleController = require('./controllers/ConsoleController');\n\nvar _ConsoleController2 = _interopRequireDefault(_ConsoleController);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import oAuthKeys from './services/oAuthKeys';\n//import ProductService from './services/ProductService';\n\nvar app = angular.module('liveguardManager', ['ngResource', 'satellizer', 'angular-jwt', 'ui.router']).constant('API', '/manager/api')\n//.config(InterceptorConfig)\n.constant('FACEBOOK_API_KEY', '1204326232924507').controller('consoleController', _ConsoleController2.default).config(function ($stateProvider, $urlRouterProvider) {\n  $stateProvider.state('home', {\n    url: '/',\n    templateUrl: 'views/login.html'\n  }).state('login', {\n    url: '/login',\n    templateUrl: 'views/login.html'\n  }).state('about', {\n    url: '/about',\n    templateUrl: 'views/about.html'\n  }).state('dashboard', {\n    url: '/dashboard',\n    templateUrl: 'views/dashboard.html'\n  });\n}).config(function ($authProvider, $urlRouterProvider, FACEBOOK_API_KEY) {\n  $authProvider.facebook({\n    url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n    clientId: FACEBOOK_API_KEY\n  });\n\n  $urlRouterProvider.otherwise('login');\n\n  $authProvider.loginUrl = 'api/auth/login';\n  $authProvider.signupUrl = 'api/auth/register';\n\n  //.httpInterceptor = function(config) {\n  //   return !!config.url.match(API_URL2);\n  //};\n\n  //$authProvider.tokenPrefix = null;\n});\n\n/*InterceptorConfig.$inject = ['$httpProvider'];\nfunction InterceptorConfig($httpProvider){\n  $httpProvider.interceptors.push('AuthInterceptor');\n}  ;*/\n\n/*Router.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('home', {\n    url: '/', \n    templateUrl: 'views/console.html'\n  })\n  .state('about', {\n    url: '/about', \n    templateUrl: 'views/about.html'\n  });\n  $urlRouterProvider.otherwise('/');\n}*/\n\n},{\"./controllers/ConsoleController\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction ConsoleController($scope, $http, $resource, $auth, $state) {\n  console.log('Main controller Angular');\n\n  $scope.pointingtous = false;\n  $scope.authenticated = false;\n\n  $scope.login = { email: \"\", password: \"\", username: \"\" };\n\n  console.log(\"controller loaded\");\n\n  $scope.isAuth = function () {\n    $scope.authenticated ? '' : $state.go('login');\n  };\n\n  // sign in with facebook\n  $scope.authenticate = function (provider) {\n    $auth.authenticate(provider);\n  };\n\n  $scope.helloworld = \"hello world from $scope now its not even doing it\";\n\n  $scope.submitLogin = function () {\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.login($scope.login).then(function (response) {\n      console.log(response);\n      $scope.authenticated = true;\n      $state.go('dashboard');\n    });\n  };\n\n  $scope.submitRegister = function () {\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.signup($scope.login).then(function (response) {\n      console.log(response);\n      $scope.authenticated = true;\n      $state.go('dashboard');\n    });\n  };\n\n  $scope.logout = function () {\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.logout();\n    $scope.authenticated = false;\n    $state.go('login');\n  };\n}\nexports.default = ConsoleController;\n\n},{}]},{},[1])\n\n","import ConsoleController from './controllers/ConsoleController';\n//import oAuthKeys from './services/oAuthKeys';\n//import ProductService from './services/ProductService';\n\nvar app = angular.module('liveguardManager', ['ngResource', 'satellizer', 'angular-jwt', 'ui.router'])\n  .constant('API', '/manager/api') \n  //.config(InterceptorConfig)\n  .constant('FACEBOOK_API_KEY','1204326232924507')\n  .controller('consoleController', ConsoleController)\n  .config(function ($stateProvider, $urlRouterProvider) {\n        $stateProvider\n             .state('home', {\n                url: '/',\n                templateUrl: 'views/login.html'\n            })\n             .state('login', {\n                url: '/login',\n                templateUrl: 'views/login.html'\n            })\n             .state('about', {\n                url: '/about',\n                templateUrl: 'views/about.html'\n            })\n             .state('dashboard', {\n                url: '/dashboard',\n                templateUrl: 'views/dashboard.html'\n            });\n  }).config(function ($authProvider,$urlRouterProvider, FACEBOOK_API_KEY){\n      $authProvider\n        .facebook({\n          url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.\n          clientId: FACEBOOK_API_KEY\n        });\n\n        $urlRouterProvider.otherwise('login');\n\n        $authProvider.loginUrl  = 'api/auth/login';\n        $authProvider.signupUrl = 'api/auth/register';\n\n        //.httpInterceptor = function(config) {\n       //   return !!config.url.match(API_URL2);\n      //};\n\n    //$authProvider.tokenPrefix = null;\n\n});\n\n\n\n\n/*InterceptorConfig.$inject = ['$httpProvider'];\nfunction InterceptorConfig($httpProvider){\n  $httpProvider.interceptors.push('AuthInterceptor');\n}  ;*/\n\n/*Router.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('home', {\n    url: '/', \n    templateUrl: 'views/console.html'\n  })\n  .state('about', {\n    url: '/about', \n    templateUrl: 'views/about.html'\n  });\n  $urlRouterProvider.otherwise('/');\n}*/","\n  function ConsoleController($scope,$http, $resource, $auth, $state) {\n    console.log('Main controller Angular');\n\n    $scope.pointingtous  = false;\n    $scope.authenticated = false;\n\n    $scope.login = {email: \"\",password: \"\", username: \"\"}\n\n\n    console.log(\"controller loaded\");\n\n\n   $scope.isAuth = function(){\n      $scope.authenticated ? '' : $state.go('login');\n   }\n\n    // sign in with facebook\n    $scope.authenticate = function(provider) {\n      $auth.authenticate(provider);\n    };\n\n\n    $scope.helloworld = \"hello world from $scope now its not even doing it\";\n\n\n   $scope.submitLogin = function(){\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.login($scope.login).then(function(response){\n      console.log(response);\n      $scope.authenticated = true;\n      $state.go('dashboard')\n    })\n   }\n\n  $scope.submitRegister = function(){\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.signup($scope.login).then(function(response){\n       console.log(response);\n       $scope.authenticated = true;\n       $state.go('dashboard')\n    })\n  }\n\n  $scope.logout = function(){\n    console.log(\"email: \", $scope.login.email, \"password: \", $scope.login.password);\n    $auth.logout()\n    $scope.authenticated = false;\n    $state.go('login')\n  }\n  \n    \n  }\nexport default ConsoleController;\n"]}