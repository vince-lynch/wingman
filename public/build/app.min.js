(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _ConsoleController = require('./controllers/ConsoleController');

var _ConsoleController2 = _interopRequireDefault(_ConsoleController);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//import oAuthKeys from './services/oAuthKeys';
//import ProductService from './services/ProductService';

var app = angular.module('liveguardManager', ['ngResource', 'satellizer', 'angular-jwt', 'ui.router']).constant('API', '/manager/api')
//.config(InterceptorConfig)
.constant('FACEBOOK_API_KEY', '1204326232924507').controller('consoleController', _ConsoleController2.default).config(["$stateProvider", "$urlRouterProvider", function ($stateProvider, $urlRouterProvider) {
  $stateProvider.state('home', {
    url: '/',
    templateUrl: 'views/login.html'
  }).state('login', {
    url: '/login',
    templateUrl: 'views/login.html'
  }).state('about', {
    url: '/about',
    templateUrl: 'views/about.html'
  }).state('dashboard', {
    url: '/dashboard',
    templateUrl: 'views/dashboard.html'
  });
}]).config(["$authProvider", "$urlRouterProvider", "FACEBOOK_API_KEY", function ($authProvider, $urlRouterProvider, FACEBOOK_API_KEY) {
  $authProvider.facebook({
    url: 'api/auth/facebook', // this is the place we are telling Satilette to tell facebook to send back its post request to.
    clientId: FACEBOOK_API_KEY
  });

  $urlRouterProvider.otherwise('login');

  $authProvider.loginUrl = 'api/auth/login';
  $authProvider.signupUrl = 'api/auth/register';

  //.httpInterceptor = function(config) {
  //   return !!config.url.match(API_URL2);
  //};

  //$authProvider.tokenPrefix = null;
}]);

/*InterceptorConfig.$inject = ['$httpProvider'];
function InterceptorConfig($httpProvider){
  $httpProvider.interceptors.push('AuthInterceptor');
}  ;*/

/*Router.$inject = ['$stateProvider', '$urlRouterProvider'];
function Router($stateProvider, $urlRouterProvider) {
  $stateProvider
  .state('home', {
    url: '/', 
    templateUrl: 'views/console.html'
  })
  .state('about', {
    url: '/about', 
    templateUrl: 'views/about.html'
  });
  $urlRouterProvider.otherwise('/');
}*/

},{"./controllers/ConsoleController":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function ConsoleController($scope, $http, $resource, $auth, $state) {
  console.log('Main controller Angular');

  $scope.pointingtous = false;
  $scope.authenticated = false;

  $scope.login = { email: "", password: "", username: "" };

  console.log("controller loaded");

  $scope.isAuth = function () {
    $scope.authenticated ? '' : $state.go('login');
  };

  // sign in with facebook
  $scope.authenticate = function (provider) {
    $auth.authenticate(provider);
  };

  $scope.helloworld = "hello world from $scope now its not even doing it";

  $scope.submitLogin = function () {
    console.log("email: ", $scope.login.email, "password: ", $scope.login.password);
    $auth.login($scope.login).then(function (response) {
      console.log(response);
      $scope.authenticated = true;
      $state.go('dashboard');
    });
  };

  $scope.submitRegister = function () {
    console.log("email: ", $scope.login.email, "password: ", $scope.login.password);
    $auth.signup($scope.login).then(function (response) {
      console.log(response);
      $scope.authenticated = true;
      $state.go('dashboard');
    });
  };

  $scope.logout = function () {
    console.log("email: ", $scope.login.email, "password: ", $scope.login.password);
    $auth.logout();
    $scope.authenticated = false;
    $state.go('login');
  };
}
exports.default = ConsoleController;

},{}]},{},[1])


//# sourceMappingURL=app.min.js.map
